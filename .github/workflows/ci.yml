name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres123
          POSTGRES_USER: postgres
          POSTGRES_DB: nfc_bracelet_fortune_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint check
        run: pnpm lint

      - name: Build shared types
        run: pnpm --filter @shared/types build

      - name: Generate Prisma client
        run: pnpm --filter api prisma:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/nfc_bracelet_fortune_test

      - name: Run database migrations
        run: pnpm --filter api prisma:deploy
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/nfc_bracelet_fortune_test

      - name: Run backend tests
        run: pnpm --filter api test
        env:
          DATABASE_URL: postgresql://postgres:postgres123@localhost:5432/nfc_bracelet_fortune_test
          JWT_SECRET: test-jwt-secret
          WECHAT_APP_ID: test-app-id
          WECHAT_APP_SECRET: test-app-secret

      - name: Run frontend tests
        run: pnpm --filter wx-app test:unit

      - name: Build applications
        run: pnpm build
